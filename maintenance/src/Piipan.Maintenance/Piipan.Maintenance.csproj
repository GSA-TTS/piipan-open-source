<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
    <RestoreLockedMode Condition="'$(ContinuousIntegrationBuild)' == 'true'">true</RestoreLockedMode>
  </PropertyGroup>

  <!--
    Because our static analysis tool, CodeQL, autobuilds C# with the UseSharedCompilation flag, we check this flag to avoid running npm tasks for these types of builds.
  -->
  <Target Name="NpmInstall" Inputs="package.json" Outputs="node_modules/.install-stamp" Condition="'$(UseSharedCompilation)' != 'false'">
    <!--
        Use npm install or npm ci depending on ContinuousIntegrationBuild value
     -->
    <Exec Command="npm ci" Condition="$(ContinuousIntegrationBuild) == 'true'" />
    <Exec Command="npm install" Condition="$(ContinuousIntegrationBuild) != 'true'" />

    <!-- Write the stamp file, so incremental builds work -->
    <Touch Files="node_modules/.install-stamp" AlwaysCreate="true" />
  </Target>

  <!--
      2. Compiles assets to wwwroot
      MSBuild runs NpmInstall before this task because of the DependsOnTargets attribute.

      Because our static analysis tool, CodeQL, autobuilds C# with the UseSharedCompilation flag, we check this flag to avoid running npm tasks for these types of builds.
   -->
  <Target Name="NpxGulpBuild" DependsOnTargets="NpmInstall" BeforeTargets="BeforeBuild" Condition="'$(UseSharedCompilation)' != 'false'">

    <Exec Command="npx gulp build" />
  </Target>
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Logging.AzureAppServices" Version="7.0.12" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\..\shared\src\Piipan.Shared\Piipan.Shared.csproj" />
  </ItemGroup>

</Project>
